name: Update Changelog JSON

on:
  push:
    branches:
      - beta

jobs:
  update-changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Fetch latest commits from Flutter beta branch
        run: |
          FLUTTER_REPO="https://api.github.com/repos/flutter/flutter/commits"
          BRANCH="beta"

          # If changelog.json exists, extract the last known date
          if [ -f ./changelog.json ]; then
            LAST_DATE=$(jq -r '.[0].date // empty' changelog.json)
          else
            LAST_DATE=""
          fi

          PARAMS="?sha=$BRANCH&per_page=100"
          if [ -n "$LAST_DATE" ] && [ "$LAST_DATE" != "null" ]; then
            PARAMS="$PARAMS&since=$LAST_DATE"
          fi

          # Fetch commits from Flutter beta
          curl -s "$FLUTTER_REPO$PARAMS" \
            -H "Accept: application/vnd.github.v3+json" \
            > commits.json

          # Process new commits
          NEW_COMMITS=$(jq '[.[] | {
            sha: .sha,
            message: .commit.message,
            date: .commit.committer.date,
            authorLogin: (.author.login // "unknown")
          }] | sort_by(.date)' commits.json)

          # Check if we got new commits
          if [ "$(echo "$NEW_COMMITS" | jq length)" -eq "0" ]; then
            echo "No new commits found."
            exit 0
          fi

          # Merge new commits with existing changelog
          if [ -f changelog.json ]; then
            EXISTING=$(cat changelog.json)
            MERGED=$(echo "$NEW_COMMITS" "$EXISTING" | jq -s '.[0] + .[1] | sort_by(.date) | reverse')
          else
            # If no changelog yet, just use the new commits in reverse order
            MERGED=$(echo "$NEW_COMMITS" | jq 'reverse')
          fi

          echo "$MERGED" > changelog.json

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add changelog.json
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update changelog.json with latest commits"
            git push origin beta
          fi
