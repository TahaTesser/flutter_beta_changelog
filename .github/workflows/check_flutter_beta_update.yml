name: Check Flutter Beta Update

on:
  schedule:
    - cron: '0 5 * * *'  # Runs every day at 5 AM UTC
  workflow_dispatch:    # Allows manual trigger

permissions:
  contents: write       # Needed to commit and push changes

jobs:
  check-flutter-beta:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout This Repo
        uses: actions/checkout@v3

      - name: Get Latest Flutter Beta Commit
        run: |
          # Use GitHub's API to get the latest commit on the beta branch of flutter/flutter
          LATEST_COMMIT=$(curl -s https://api.github.com/repos/flutter/flutter/commits/beta | jq -r '.sha')
          echo "LATEST_COMMIT=$LATEST_COMMIT" >> $GITHUB_ENV

      - name: Compare Commits
        id: compare
        run: |
          LATEST_COMMIT=$LATEST_COMMIT
          if [ ! -f flutter_beta_last_commit.txt ]; then
            echo "No last commit file found. Creating one."
            echo "$LATEST_COMMIT" > flutter_beta_last_commit.txt
            UPDATED="true"
          else
            PREVIOUS_COMMIT=$(cat flutter_beta_last_commit.txt)
            if [ "$LATEST_COMMIT" != "$PREVIOUS_COMMIT" ]; then
              echo "Flutter beta branch updated: $PREVIOUS_COMMIT -> $LATEST_COMMIT"
              UPDATED="true"
              echo "$LATEST_COMMIT" > flutter_beta_last_commit.txt
            else
              echo "No update in Flutter beta. Latest known commit: $PREVIOUS_COMMIT"
              UPDATED="false"
            fi
          fi
          echo "updated=$UPDATED" >> $GITHUB_OUTPUT

      - name: Increment Build Version If Updated
        if: steps.compare.outputs.updated == 'true'
        run: |
          # Example increment logic:
          # Suppose we keep a build version in build_version.txt as a simple integer.
          # Increment it by 1.
          if [ ! -f build_version.txt ]; then
            echo "0" > build_version.txt
          fi
          BUILD_VERSION=$(cat build_version.txt)
          NEW_VERSION=$((BUILD_VERSION + 1))
          echo $NEW_VERSION > build_version.txt

          # If you store your version in pubspec.yaml, you could use sed to increment
          # Example:
          # sed -i "s/^version: \([0-9]*\)/version: $((\1+1))/" pubspec.yaml

      - name: Commit and Push Changes
        if: steps.compare.outputs.updated == 'true'
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add flutter_beta_last_commit.txt build_version.txt
          git commit -m "Increment build version due to Flutter beta update"
          git push origin HEAD:${{ github.ref }}

